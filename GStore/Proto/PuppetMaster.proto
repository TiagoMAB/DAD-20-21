syntax = "proto3";

package GStore;

service PCS {
	rpc Client(ClientRequest) returns (ClientResponse);
	rpc Server(ServerRequest) returns (ServerResponse);
}

service PuppetMaster {
	rpc Crash(CrashRequest) returns (CrashResponse);
	rpc Freeze(FreezeRequest) returns (FreezeResponse);
	rpc Partition(PartitionRequest) returns (PartitionResponse);
	rpc Replication(ReplicationRequest) returns (ReplicationResponse);
	rpc Status(StatusRequest) returns (StatusInfo);
	rpc Unfreeze(UnfreezeRequest) returns (UnfreezeResponse);
}

service Status {
	rpc Status(StatusInfo) returns (StatusResponse);
}

message ClientRequest {
	string id = 1;
	string script = 2;
	string clientUrl = 3;
	string serverUrl = 4;
}
message ClientResponse {}

message CrashRequest {}
message CrashResponse {}

message FreezeRequest {}
message FreezeResponse {}

message PartitionRequest {
	int32 replicas = 1;
	string name = 2;
	repeated string ids = 3;
}
message PartitionResponse {}

message ReplicationRequest {
	int32 factor = 1;
}
message ReplicationResponse {}

message ServerRequest {
	string id = 1;
	string url = 2;
	int64 min_delay = 3;
	int64 max_delay = 4;
	// TODO: Add optional parameters
}
message ServerResponse {}

message StatusRequest {}
message StatusResponse {}
message StatusInfo {
	// TODO: Use union to select either server or client data
	bool isClient = 1;
	bool isProcessComplete = 2;
}

message UnfreezeRequest {}
message UnfreezeResponse {}