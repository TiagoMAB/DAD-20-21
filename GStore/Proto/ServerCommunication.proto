syntax = "proto3";

package GStore;

service ServerCommunication {
	rpc Handshake (HandshakeRequest) returns (HandshakeReply);
	rpc Register (RegisterRequest) returns (RegisterReply);
	rpc LockObject (LockObjectRequest) returns (LockObjectReply);
	rpc SharePartition (SharePartitionRequest) returns (SharePartitionReply);
	rpc Gossip (GossipRequest) returns (GossipReply);
	rpc GetUniqueId (GetUniqueIdRequest) returns (GetUniqueIdReply);
	rpc GetDelay (GetDelayRequest) returns (GetDelayReply);
	rpc MaxKnownId (MaxKnownIdRequest) returns (MaxKnownIdReply);
	rpc ShareUpdate (ShareUpdateRequest) returns (ShareUpdateReply);
}

message HandshakeRequest {
	string id = 1;
	string url = 2;
}

message HandshakeReply {
	repeated Info network = 1;

	message Info {
		string id = 1;
		string url = 2;
	}
}

message RegisterRequest {
	string id = 1;
	string url = 2;
}

message RegisterReply {
}

message LockObjectRequest {
	string partitionId = 1;
	string objectId = 2;
}

message LockObjectReply {
	bool ok = 1;
}

message SharePartitionRequest {
	int32 replicas = 1;
	string name = 2;
	repeated string ids = 3;
}

message SharePartitionReply {}

message Record {
	int32 ts = 1;
	string objectId = 2;
	string value = 3;
}

message GossipRequest {
	int32 ts = 1;
	string partitionId = 2;
}

message GossipReply {
	int32 ts = 1;
	repeated Record updates = 2;
	string replica = 3;
}

message GetUniqueIdRequest {
	string partitionId = 1;
	string objectId = 2;
	string value = 3;
}

message GetUniqueIdReply {
	int32 id = 1;
}

message GetDelayRequest {

}

message GetDelayReply {
	int32 delay = 1;
}

message MaxKnownIdRequest {
	string partition = 1;
}

message MaxKnownIdReply {
	int32 id = 1;
}

message ShareUpdateRequest {
	string partitionId = 1;
	string objectId = 2;
	string value = 3;
	int32 uniqueId = 4;
}

message ShareUpdateReply {

}